Setting up the build environment on windows 7:
=============================================


1) Install a svn client
	- tortoiseSvn will do nicely, simple and integrates in into explorer (rightclick on a folder and you will see). Username and Password is: your google accounts username, Password is NOT the google accounts password, but the password located in when you have signed into your google account : profile -> settings -> GoogleCode.com Password. It will be a random autogenerated one.  

2) Browse the repository and checkout the trunk recursively.

3) Download and install Microsoft Visual Studio C++  2008 Express, (note don't go for the 2010 version since project files etc. have changes between the version)

4) Start visual studio and select file->Open->Project/solution and use the filebrowser to open IndieLib_vc2008/IndieLib_vc2008.sln and then you should have 3 projects in your solution explorer : IndieLib_vc2008, Tests_Win32 and UnitTests.

5) If you now choose to build the entire solution ( Build->Build solution ) you will get some compile errors like : fatal error C1083: Cannot open include file: 'd3dx9.h': No such file or directory. This is because youll need the DirectX SDK, so grab it ( http://msdn.microsoft.com/en-us/directx/aa937788 just pick the latest SDK ) and install it.

Setting up the Directx in visual Studio:

	A. select Tools -> Options
	B. In the new window look for  Project and Solutions -> VC++ Directories
	C. In the right look for the combo box of "Show Directories for:"
	D. In the combo box click on Include
	E. In the box that's under the combo box, double click in the last spot (which is blank).
	F. After click on it a filebrowser will appear.. find the Include folder and select it.
	G. after you have done the process with the Include. Repeat the procedure with the library instead of include in the combo box. (here I selected the /include/x86 folder) 

6) If you build the intire solution like in 5, the compile should now work.

7) Debugging: When compiling and debugging the project from Visual C++ studio 2008, you need to be aware that the working directory is setup to you not to the current path of the 
   exe file, but by default to the project location. Due to the crossplatform nature of our project, we don't respect the fact that the project file and exe file 'should' be by default
   in the same directory. All binaries are in a different location, and most importantly, all resources paths in test and tutorial projects are relative to that 'binaries' directories.

   The effect of that is that, when running the tests or tutorials using IndieLib (after successfully compiling them) you can have the problem that they start and stop directly, and if 
   you dig inside the generated debug.log file, it is because the resources are not found. You need to change the 'debug' working directory preference manually. Unfortunately, this is a user
   preference, and not a project preference, so it's not possible to configure for all users. Do it for the target project (test or tutorial you want to run):
   
   Project Settings -> Configuration Properties -> Debugging -> Working Directory, set it to $(TargetDir)



Setting up the build enviroment on OSX:
======================================

TODO:





// TODO: remove / integrate comment belov this line

- Dependencies: There are some (undocumented) dependencies to compile with Visual C++. . You have to download it and install it, and add the header path and lib path to the Visual c++ environment.  You will also need the DirectX SDK if you want to test code using DirectX. Note that in the current (and next versions) you don't need that, as long as you keep the correct setting in the Defines.h file (#define INDIERENDER_OPENGL and comment #define INDIERENDER_DIRECTX).


